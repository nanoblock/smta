<div class="video">
<!-- left: 500px; top: 600px; -->
  <div class="container">

    <div class="top-menu">
        <div class="preview-mode" style="float: left;">
          <%= image_tag asset_path('project/preview.png') %>
          <div class="top-menu-dropdown-preview">
            <%= image_tag asset_path('project/preview_hover.svg') %>
          </div>
        </div>
        <div class="link-mode" style="float: left;">
          <%= image_tag asset_path('project/page_link_active.png') %>
          <div class="top-menu-dropdown-link">
            <%= image_tag asset_path('project/page_link_hover.svg') %>
          </div>
        </div>
        <div class="save-mode" style="float: left;">
          <%= image_tag asset_path('project/save.png') %>
          <div class="top-menu-dropdown-save">
            <%= image_tag asset_path('project/save_hover.svg') %>
          </div>
        </div>
        <div style="clear: both;"></div>
    </div>
    
    <%= image_tag asset_path('project/i-phone-6-silver.png'), class: "mobile-wrap" %>
    <!-- <div class="mobile-view" style="background-image: url(<= asset_path @image.photo.url %>)"> -->
    <!-- <div class="mobile-view"> -->
    <%= image_tag asset_path('project/play.svg'), class: 'play-btn', id: 'playpause' %>
    <div class="video-view">
      <figure id="videoContainer" data-fullscreen="false">
        <video muted id="video" src="<%= @video.url %>"></video>
      </figure>

      <div id="canvas"></div>
    </div>
  </div>

  <form id="hrefPost">
    <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
    <input name="image_id" id="image_id" type="hidden" value="">
  </form>

  <div id="video-controls" class="controls">
    <div class="progress-wrap progress" data-progress-percent="0" id="progress">
      <div class="progress-bar" id="progress-bar"></div>
    </div>
  </div>
  
  <!-- <div class="video-btn" style="text-align: center; background-color: lightslategray;">
    <div id="stop" style="float: left;margin-left: 10px;">정지</div>
    <div id="preview" style="float: left;margin-left: 10px;">구간확인</div>
    <div id="section-add" style="float: left;margin-left: 10px;">구간 추가</div>
  </div> -->
    
  <div class="preview-name"><%= @project.name %></div>
  <div class="preview-line"></div>
  
</div>

<script type="text/javascript">
  var select_image_id = null
  $('#video').width($('.video-view').width());
  $('#video').height($('.video-view').height());

  $(window).resize(function() {
    $('#video').width($('.video-view').width());
    $('#video').height($('.video-view').height());
  });

  var supportsVideo = !!document.createElement('video').canPlayType;

  var videoContainer = document.getElementById('videoContainer');
  var video = document.getElementById('video');
  var videoControls = document.getElementById('video-controls');

  video.controls = false;

  videoControls.style.display = 'block';

  var breakpoint = document.getElementById('breakpoint');
  var playpause = document.getElementById('playpause');
  var progress = document.getElementById('progress');
  var progressBar = document.getElementById('progress-bar');
  var preview = document.getElementById('preview');

  var breakpointArray = [];
  var pauseTime;
  var currentSection = 0;
  var mobileView = $('.mobile-view');

  var main_content = $('#canvas');
  var gen_box_count  = 1;

  var main_content_left = parseInt(main_content.offset().left);
  var main_content_top = parseInt(main_content.offset().top);
  var main_content_right = parseInt(main_content_left) + parseInt(mobileView.width());
  var main_content_bottom = parseInt(main_content_top) + parseInt(mobileView.height());

  if (document.addEventListener) {
      
      video.addEventListener('loadedmetadata', function() {
        progress.setAttribute('max', video.duration);
      });

      playpause.addEventListener('click', function(e) {
        if (video.paused || video.ended) video.play();
        else video.pause();
      });
      
      var isSectionTime = false;

      video.addEventListener('timeupdate', function() {
        if (!progress.getAttribute('max')) progress.setAttribute('max', video.duration);
        progress.value = video.currentTime;
        progressBar.style.width = ((video.currentTime / video.duration) * 100) + '%';
        
        setClickBoxSyncVideo(video.currentTime);
      }); 

      video.addEventListener('pause', function(e) {
        $(playpause).attr('src', '<%= asset_path 'project/play.svg' %>');
      });

      video.addEventListener('play', function(e) {
        $(playpause).attr('src', '<%= asset_path 'project/pause.svg' %>');
      });

      progress.addEventListener('click', function(e) {
        video.pause();
        var pos = (e.pageX  - this.offsetLeft) / this.offsetWidth;
        video.currentTime = pos * video.duration;
        // if(!video.paused) {
        //   video.pause();
        //   setTimeout(function () {      
        //     video.play();
        //   }, 150);
        // } else {
        //   video.play();
        // } 
      });

      function drawSectionPoint(time, elements) {
        if(isNullOrUndefined(elements.attr('id'))) {
          elements.attr('id', time);
        }
        
        id = elements.attr('id');

        $('.progress').append("<div class=\"section " +elements.attr('class')[0]+ "\" id="+id+" style=\"z-index: 2;\n\
        position: absolute;\n\
        width: 4px;\n\
        height: 10px;\n\
        background-color: #407abd;\n\
        left:"+ Math.floor((time / video.duration) * 100) + '%' +";\">\n\
                  </div>");
      };

      $(".top-menu").children().on("click", function(e) {
        var clazz = $(this).attr('class');
        var id = <%= @video.id %>
        if(clazz == "save-mode") {
          saveClickableArea();
          hrefPost("/projects/<%= params[:project_id] %>/preview", id);
        } else if(clazz == "preview-mode") {
          hrefPost("/projects/<%= params[:project_id] %>/preview", id);
        }
      });
    }


  function hrefPost(url, param) {
    $('#hrefPost #image_id').attr('value', param);
    $('#hrefPost').attr({action: url, method: 'post'}).submit();
  }

  function setVideoPlay(startTime, endTime) {video.currentTime = startTime; pauseTime = endTime;};

  function setBreakpoint(time, elements) {
    breakpointArray.push(video.currentTime);
    breakpointArray.sort();
    drawSectionPoint(time, elements);
  };

  function setClickBoxSyncVideo(time) {
    // target_image_id: $(this).attr('id'),
    //         top: (parseInt($(this).css('top'))),
    //         left: (parseInt($(this).css('left'))),
    //         width: $(this).width(),
    //         height: $(this).height()

    if($('.clickbox').length != 0) {
      $('.clickbox').each(function(index, value) {
        if(time - 0.2 <= $(value).attr('id') && time + 0.2 >= $(value).attr('id')) {
          $(value).fadeIn();
          return false;
        }else{
          $(value).fadeOut();
        }
      });
    }
    
  }
  
  function isNullOrUndefined(variable) { return variable === null || variable === undefined || variable == ''; }

  function saveClickableArea() {
    createClickableArea();
  }

  function createClickableArea() {
    length = $('*[class^="gen_box_"]').length;
    $('*[class^="gen_box_"]').each(function(index, value) {
      $.ajax({
        type: "POST",
        url: "<%= project_video_clickables_path(params[:project_id], @video_id) %>",
        data: { clickable: { 
          time: $(this).attr('id'),
          top: (parseInt($(this).css('top'))),
          left: (parseInt($(this).css('left'))),
          width: $(this).width(),
          height: $(this).height() } },
        success: function(data) {
        },  
        error: function(data) {

        }
      });
    });

  }

  function destroyClickableArea() {
    $.ajax({
      type: "POST",
      // url: "/projects/"+ <= params[:project_id] %> +"/videos/"+<= @video_id %>+"/clickables/destroy_all",
      url: "<%= destroy_all_project_video_clickables_path(params[:project_id], @video_id) %>",
      success: function(data) {

      },
      error: function(data) {

      }
    });
  } //destroyClickableArea

  var main_content = $('#canvas')
    gen_box = null;

  var event_check = false;

  main_content.on({
    dragstart: function(e) {
      event_check = true;
      x = e.pageX,
      y = e.pageY;
    },
    resizestart: function(e) {
      event_check = true;
    }
  });

  main_content.selectable({

    create: function(e) {
      // < @video.video_clickables.each do |clickables| %>
      //   drawGenBox(gen_box_count, "<= clickables.time %>", "<= clickables.width %>", "<= clickables.height %>", "<= clickables.left %>", "<= clickables.top %>");
      // < end %>
    },
    selected: function(e) {

    },
    unselected: function(e) {

    },

    start: function(e) {
      x_begin = e.pageX,
      y_begin = e.pageY;
    },

    stop: function(e) {

      x_end = e.pageX,
      y_end = e.pageY;

      drawGenBox(gen_box_count, video.currentTime);

  }});

  $(document).on("keydown", function(e) {
    if (e.which == 8) {
      $('.clicked').each(function(index, value) {
        $(this).fadeOut(300).remove();
      });
    }
  });

  function drawGenBox(box_count, time, box_width, box_height, box_left, box_top) {
      var gen_box = null;
      if(isNullOrUndefined(box_width)) {
        if( x_end - x_begin >= 0 ) {
          width  = x_end - x_begin,
          drag_left = false;
        } else {
          width  = x_begin - x_end,
          drag_left = true;
        }
      } else {
        width = parseInt(box_width);
      }

      if(isNullOrUndefined(box_height)) {
        if( y_end - y_begin >= 0) {
          height = y_end - y_begin,
          drag_top = false;
          
        } else {
          height = y_begin - y_end,
          drag_top = true;
        }
      } else {
        height = parseInt(box_height);
      }

      main_content.append('<div class="gen_box_' + box_count + ' '+ "hover clickbox"+'"></div>');

      gen_box = $('.gen_box_' + box_count);
      if(!isNullOrUndefined(time)) {
        gen_box.attr('id', time);
      }

      setBreakpoint(time, gen_box);

      gen_box.on('click', function(e) {
        $('.clicked').removeClass('clicked');
        $(this).addClass('clicked');
      });

      $(".hover").hover(function() {
        $(".hover").css("cursor", "pointer");
      });

      gen_box.css({
        // 'rgba(0, 0, 0, 0.8)'
        'background' : 'rgba(0, 0, 0, 0.4)',
        'width'      : width,
        'height'     : height,
        'position'   : 'absolute'
      })
      .draggable({ containment: "parent" })
      .resizable({ containment: "parent" });

      if(isNullOrUndefined(box_left)) {
        drag_left ? gen_box.offset({ left: x_end }) : gen_box.offset({ left: x_begin });
      } else {
        gen_box.offset({ left: parseInt(box_left)+parseInt(main_content_left) });
      }
      
      if(isNullOrUndefined(box_top)) {
        drag_top ? gen_box.offset({ top: y_end }) : gen_box.offset({ top: y_begin });
      } else {
        gen_box.offset({ top: parseInt(box_top)+parseInt(main_content_top) });
      }
      gen_box_count++;
    }; //drawGenBox
</script>