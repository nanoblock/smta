
<div class="project">
  <div class="container">
    
    <%= render 'project/form' %>

    <div class="project-upload">
      <%= form_tag create_image_path, method: 'post', class: 'dropzone', id: 'upload-dropzone', remote: true, authenticity_token: true do %>
        
        <input name="project_name" id="project_name" type="hidden" value="">
        <input name="project_id" id="project_id" type="hidden" value="">

        <div id="upload">
          <%= image_tag asset_path('project/image_upload.png'), class: 'dz-thumbnail dz-image' %>
        </div>
      <% end %>
    </div>
      

    <div id='preview'></div>
      
  </div>

  <form id="hrefPost">
    <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
    <input name="image_id" id="image_id" type="hidden" value="">
    <input name="project_id" id="project_id" type="hidden" value="">
  </form>

</div>

<script type="text/javascript">
  var saveMode = "";
  var projectValidation = false;

  function hrefPost(url,method, image_param, project_name, project_id) {
    $('#hrefPost #image_id').attr('value', image_param);
    $('#hrefPost #project_name').attr('value', project_name)
    $('#hrefPost #project_id').attr('value', project_id)
    $('#hrefPost').attr({action: url, method: method}).submit();
  }

  function createProject(name, desc) {
    param_project_name = name;
    param_project_desc = desc;

    if($('.project-name-form textarea').val() != "") {
      $.ajax({
        type: "POST",
        url: 'project/validate/'+name,
        success: function(data, status, xhr) {
          if(xhr.status == 200) {

            $.ajax({
              type: "POST",
              url: "<%= create_project_path %>",
              data: { project: { 
                name: param_project_name, 
                desc: param_project_desc }
              },
              success: function(data, status, xhr) {
                $('.project-name-form textarea').text(param_project_name);
                $('.project-desc-form textarea').text(param_project_desc);

                result = $.parseJSON(xhr.responseText);
                
                $('.dropzone #project_name').attr('value', result.name);
                $('.dropzone #project_id').attr('value', result.id);

                if (headlineDropzone.getQueuedFiles().length > 0) {
                  headlineDropzone.processQueue();
                } else {
                  hrefPost("/project/"+$('.project-name-form textarea').val(), 'get', '', result.name, result.id);
                }
              },
              error: function(data) {

              }
            });

          } else {
            alert("프로젝트가 존재합니다. 이름을 다시 설정해 주세요.");
          }
        }
      });
      
    } else {
      alert("프로젝트 제목을 입력해주세요.");
    }
  }

  $('.action-icon .project-submit').on('click', function(e) {
    createProject($('.project-name-form textarea').val(), $('.project-desc-form textarea').val());
  });

  Dropzone.autoDiscover = false;

  var headlineDropzone = new Dropzone("#upload-dropzone", {

  paramName: 'image[photo]',
  maxFiles: 100,
  addRemoveLinks: false,
  thumbnailWidth: 139,
  thumbnailHeight: 255,
  parallelUploads: 100,
  clickable: '#upload',
  previewContainer: '#preview',
  autoProcessQueue: false,
  previewTemplate: "\<div class=\"dz-preview dz-file-preview\">\n\
  <div class=\"dz-remove\">삭제</div>\n\
  <div class=\"overlay\"><span>이미지 연결</span></div>\n\
  <img class=\"dz-thumbnail\" data-dz-thumbnail>\n\
  <div class=\"dz-filename file-name\"><span data-dz-name></span></div>\n\
    </div>\n\
    ",
  renameFilename: function (file) {
    return file.renameFilename = file.split('.')[0];
  },
  acceptedFiles:'.jpg, .png, .jpeg, .gif',

  init: function(){

    this.on('dragenter', function(event) {

    });

    this.on('dragleave', function(event) {

    });

    this.on('success', function(data, status, xhr) {
      result = $.parseJSON(data.xhr.responseText);
      $(data.previewTemplate).attr('id', result.image.id);
    });
    var clickedTemplate;
    this.on("addedfile", function(file) {

      $(file.previewTemplate).find('.overlay').on('click', function(event) {
        saveMode = "fileClick";
        clickedTemplate = file.previewTemplate;
        createProject($('.project-name-form textarea').val(), $('.project-desc-form textarea').val());
      });

      $(file.previewTemplate).find('.dz-remove').on('click', function(event) {
        clickedValue = $(file.previewElement);
        $(file.previewElement).fadeOut(300, function(e) {
          file.previewElement.parentNode.removeChild(file.previewElement);
        });
      });

    });

    this.on('complete', function(file, json) {
      
    });

    this.on('queuecomplete', function(file) {      
      if (this.getQueuedFiles().length === 0) {
        name = $('.project-name-form textarea').val();
        id = $('.dropzone #project_id').attr('value');

        if (saveMode == 'fileClick') {
          hrefPost("/project/"+ name +"/relation", 'post', $(clickedTemplate).attr('id'), $('.dropzone #project_name').attr('value'), $('.dropzone #project_id').attr('value'));
        } else {
          hrefPost("/project/"+$('.project-name-form textarea').val(), 'get', '', name, id);
        }
      }
    });
  },

});
</script>
